"""add notes and note_reasons tables

Revision ID: c69042aa4359
Revises: ec1fad755e19
Create Date: 2025-08-03 07:51:49.776521

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c69042aa4359'
down_revision: Union[str, Sequence[str], None] = 'ec1fad755e19'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('note_reasons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    note_reasons_table = sa.table('note_reasons',
        sa.column('name', sa.String)
    )
    op.bulk_insert(note_reasons_table,
        [
            {'name': 'appel sortant'},
            {'name': 'mail sortant'},
            {'name': 'appel entrant'},
            {'name': 'mail entrant'},
            {'name': 'rencontre'},
        ]
    )
    op.create_table('notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('note', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('author_name', sa.String(), nullable=False),
    sa.Column('lead_id', sa.Integer(), nullable=False),
    sa.Column('reason_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ),
    sa.ForeignKeyConstraint(['reason_id'], ['note_reasons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notes_id'), 'notes', ['id'], unique=False)
    op.drop_index(op.f('ix_contacts_new_email'), table_name='contacts')
    op.create_index(op.f('ix_contacts_email'), 'contacts', ['email'], unique=True)
    op.create_index(op.f('ix_contacts_id'), 'contacts', ['id'], unique=False)
    op.drop_column('leads', 'notes')

    bind = op.get_bind()
    if bind.dialect.name == 'sqlite':
        with op.batch_alter_table('reports', schema=None) as batch_op:
            batch_op.create_foreign_key('fk_reports_visitorId_fingerprints', 'fingerprints', ['visitorId'], ['visitorId'])
    else:
        op.create_foreign_key(None, 'reports', 'fingerprints', ['visitorId'], ['visitorId'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    if bind.dialect.name == 'sqlite':
        with op.batch_alter_table('reports', schema=None) as batch_op:
            batch_op.drop_constraint('fk_reports_visitorId_fingerprints', type_='foreignkey')
    else:
        op.drop_constraint(None, 'reports', type_='foreignkey')

    op.add_column('leads', sa.Column('notes', sa.TEXT(), nullable=True))
    op.drop_index(op.f('ix_contacts_id'), table_name='contacts')
    op.drop_index(op.f('ix_contacts_email'), table_name='contacts')
    op.create_index(op.f('ix_contacts_new_email'), 'contacts', ['email'], unique=1)
    op.drop_index(op.f('ix_notes_id'), table_name='notes')
    op.drop_table('notes')
    op.drop_table('note_reasons')
    # ### end Alembic commands ###
