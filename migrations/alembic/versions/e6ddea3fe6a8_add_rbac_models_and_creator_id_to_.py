"""Add RBAC models and creator_id to calendars

Revision ID: e6ddea3fe6a8
Revises: b9fc248141b1
Create Date: 2025-08-30 21:41:20.431165

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e6ddea3fe6a8'
down_revision: Union[str, Sequence[str], None] = 'b9fc248141b1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('permissions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_permissions_id'), ['id'], unique=False)

    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_id'), ['id'], unique=False)

    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('user_role_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_sub', sa.String(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('resource_name', sa.String(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_role_assignments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_role_assignments_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_role_assignments_user_sub'), ['user_sub'], unique=False)

    with op.batch_alter_table('calendars', schema=None) as batch_op:
        batch_op.add_column(sa.Column('creator_id', sa.String(), nullable=False))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('calendars', schema=None) as batch_op:
        batch_op.drop_column('creator_id')

    with op.batch_alter_table('user_role_assignments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_role_assignments_user_sub'))
        batch_op.drop_index(batch_op.f('ix_user_role_assignments_id'))

    op.drop_table('user_role_assignments')
    op.drop_table('role_permissions')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_id'))

    op.drop_table('roles')
    with op.batch_alter_table('permissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_permissions_id'))

    op.drop_table('permissions')
    # ### end Alembic commands ###
